apply plugin: 'com.android.application'

android {

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.example.tancho.template"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.compileSdkVersion
        versionCode rootProject.buildNum
        versionName rootProject.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
//    lintOptions {
//        //lint rules
//        apply from: "${rootDir}/config/lint.gradle", to: it
//        //locations for the rules and output
//        lintConfig file("${rootDir}/config/lint/lint-config.xml")
//        htmlOutput file("${buildDir}/reports/lint/lint.html")
//    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile project(':mylibrary')
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:' + rootProject.ext.supportLibVersion
    compile 'com.android.support:design:' + rootProject.ext.supportLibVersion
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    apply from: "${rootDir}/config/test-dependencies.gradle", to: it
}

////code quality tools
//apply from: "${rootDir}/config/codequality-findbugs.gradle"
//apply from: "${rootDir}/config/codequality-pmd.gradle"
//apply from: "${rootDir}/config/codequality-infer.gradle"
//apply from: "${rootDir}/config/codequality-checkstyle.gradle"
////code coverage
//apply from: "${rootDir}/config/codecoverage.gradle"
//



