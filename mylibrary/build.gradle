apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.compileSdkVersion
        versionCode rootProject.buildNum
        versionName rootProject.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    lintOptions {
        //lint rules
        apply from: "${rootDir}/config/lint.gradle", to: it
        //locations for the rules and output
        lintConfig file("${rootDir}/config/lint/lint-config.xml")
        htmlOutput file("${buildDir}/reports/lint/lint.html")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles "${project.rootDir}/config/proguard/proguard-rules.pro"
        }
        debug {
            testCoverageEnabled = true
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

android.defaultConfig.project.archivesBaseName = 'lib-api'

dependencies {
    //compile dependencies
    compile 'com.android.support:appcompat-v7:' + rootProject.ext.supportLibVersion
    //test dependencies
    apply from: "${rootDir}/config/test-dependencies.gradle", to: it
}

//code quality tools
apply from: "${rootDir}/config/codequality-findbugs.gradle"
apply from: "${rootDir}/config/codequality-pmd.gradle"
apply from: "${rootDir}/config/codequality-infer.gradle"
apply from: "${rootDir}/config/codequality-checkstyle.gradle"
////code coverage
apply from: "${rootDir}/config/codecoverage.gradle"
//generate javadoc
apply from: "${rootDir}/config/javadoc.gradle"
